---
swagger: "2.0"
info:
  description: "Kipartman api specifications"
  version: "1.0.0"
  title: "Kipartman"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "Sebastien Besombes"
    url: "https://github.com/turdusmerula/kipartman"
    email: "--"
  license:
    name: "GPL V3"
    url: "https://raw.githubusercontent.com/turdusmerula/kipartman/master/LICENSE"
host: "localhost:8200"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /parts/categories:
    get:
      description: "Return all categories for parts"
      operationId: "find_parts_categories"
      parameters: []
      responses:
        200:
          description: "List of categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new part category"
      operationId: "add_parts_category"
      parameters:
      - in: "body"
        name: "category"
        description: "Category to add"
        required: true
        schema:
          $ref: "#/definitions/PartCategoryNew"
      responses:
        200:
          description: "Created category"
          schema:
            $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts/category/{category_id}:
    get:
      description: "Return a part category"
      operationId: "find_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Categories"
          schema:
            $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update part category"
      operationId: "update_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Category to update"
        required: true
        schema:
          $ref: "#/definitions/PartCategoryNew"
      responses:
        200:
          description: "Updated pärt category"
          schema:
            $ref: "#/definitions/PartCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete part category"
      operationId: "delete_parts_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts:
    get:
      description: "Return all parts"
      operationId: "find_parts"
      parameters:
      - name: "category"
        in: "query"
        description: "Filter by category"
        required: false
        type: "integer"
        format: "int64"
      - name: "storage"
        in: "query"
        description: "Filter by storage"
        required: false
        type: "integer"
        format: "int64"
      - name: "with_parameters"
        in: "query"
        description: "Include parameters in answer"
        required: false
        type: "boolean"
      - name: "with_childs"
        in: "query"
        description: "Include childs in answer"
        required: false
        type: "boolean"
      - name: "with_distributors"
        in: "query"
        description: "Include distributors in answer"
        required: false
        type: "boolean"
      - name: "with_manufacturers"
        in: "query"
        description: "Include manufacturers in answer"
        required: false
        type: "boolean"
      - name: "with_storages"
        in: "query"
        description: "Include storages in answer"
        required: false
        type: "boolean"
      - name: "with_attachements"
        in: "query"
        description: "Include attachements in answer"
        required: false
        type: "boolean"
      - name: "with_references"
        in: "query"
        description: "Include references in answer"
        required: false
        type: "boolean"
      - name: "search"
        in: "query"
        description: "Search for parts matching pattern"
        required: false
        type: "string"
      responses:
        200:
          description: "List of parts"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new part"
      operationId: "add_part"
      parameters:
      - in: "body"
        name: "part"
        description: "Part to add"
        required: true
        schema:
          $ref: "#/definitions/PartNew"
      responses:
        200:
          description: "Created part"
          schema:
            $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /part/{part_id}:
    get:
      description: "Return a part"
      operationId: "find_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - name: "with_parameters"
        in: "query"
        description: "Include parameters in answer"
        required: false
        type: "boolean"
      - name: "with_childs"
        in: "query"
        description: "Include childs in answer"
        required: false
        type: "boolean"
      - name: "with_distributors"
        in: "query"
        description: "Include distributors in answer"
        required: false
        type: "boolean"
      - name: "with_manufacturers"
        in: "query"
        description: "Include manufacturers in answer"
        required: false
        type: "boolean"
      - name: "with_storages"
        in: "query"
        description: "Include storages in answer"
        required: false
        type: "boolean"
      - name: "with_attachements"
        in: "query"
        description: "Include attachements in answer"
        required: false
        type: "boolean"
      - name: "with_references"
        in: "query"
        description: "Include references in answer"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Categories"
          schema:
            $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update part"
      operationId: "update_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "part"
        description: "Part to update"
        required: true
        schema:
          $ref: "#/definitions/Part"
      responses:
        200:
          description: "Updated pärt"
          schema:
            $ref: "#/definitions/Part"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete part"
      operationId: "delete_part"
      parameters:
      - name: "part_id"
        in: "path"
        description: "Part id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /parts/parameters:
    get:
      description: "Return all available parts parameters"
      operationId: "find_parts_parameters"
      parameters:
      - name: "search"
        in: "query"
        description: "Search parameter matching value"
        required: false
        type: "string"
      responses:
        200:
          description: "List of parts parameters"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PartParameterDescription"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /units:
    get:
      description: "Return list of units"
      operationId: "find_units"
      parameters:
      - name: "symbol"
        in: "query"
        description: "Search symbol"
        required: false
        type: "string"
      responses:
        200:
          description: "Units"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Unit"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new unit"
      operationId: "add_unit"
      parameters:
      - in: "body"
        name: "unit"
        description: "Unit to add"
        required: true
        schema:
          $ref: "#/definitions/UnitNew"
      responses:
        200:
          description: "Created unit"
          schema:
            $ref: "#/definitions/Unit"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /unit/{unit_id}:
    get:
      description: "Return a unit"
      operationId: "find_unit"
      parameters:
      - name: "unit_id"
        in: "path"
        description: "Unit id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Unit"
          schema:
            $ref: "#/definitions/Unit"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /unitprefixes:
    get:
      description: "Return list of unit prefixes"
      operationId: "find_unit_prefixes"
      parameters:
      - name: "symbol"
        in: "query"
        description: "Search prefix symbol"
        required: false
        type: "string"
      responses:
        200:
          description: "Unit prefixes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UnitPrefix"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /unitprefix/{unit_prefix_id}:
    get:
      description: "Return a unit prefixes"
      operationId: "find_unit_prefix"
      parameters:
      - name: "unit_prefix_id"
        in: "path"
        description: "Unit prefix id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Unit prefix"
          schema:
            $ref: "#/definitions/UnitPrefix"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /distributors:
    get:
      description: "Return all distributors"
      operationId: "find_distributors"
      parameters:
      - name: "name"
        in: "query"
        description: "Search distributors matching name"
        required: false
        type: "string"
      responses:
        200:
          description: "List of distributors"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Distributor"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new distributor"
      operationId: "add_distributor"
      parameters:
      - in: "body"
        name: "distributor"
        description: "Distributor to add"
        required: true
        schema:
          $ref: "#/definitions/DistributorNew"
      responses:
        200:
          description: "Created distributor"
          schema:
            $ref: "#/definitions/Distributor"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /distributor/{distributor_id}:
    get:
      description: "Return a distributor"
      operationId: "find_distributor"
      parameters:
      - name: "distributor_id"
        in: "path"
        description: "Distributor id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Distributors"
          schema:
            $ref: "#/definitions/Distributor"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update a distributor"
      operationId: "update_distributor"
      parameters:
      - name: "distributor_id"
        in: "path"
        description: "Distributor id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Distributor to update"
        required: true
        schema:
          $ref: "#/definitions/DistributorNew"
      responses:
        200:
          description: "Updated distributor"
          schema:
            $ref: "#/definitions/Distributor"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete distributor"
      operationId: "delete_distributor"
      parameters:
      - name: "distributor_id"
        in: "path"
        description: "Distributor id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /manufacturers:
    get:
      description: "Return all manufacturers"
      operationId: "find_manufacturers"
      parameters:
      - name: "name"
        in: "query"
        description: "Search manufacturers matching name"
        required: false
        type: "string"
      responses:
        200:
          description: "List of manufacturers"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Manufacturer"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new manufacturer"
      operationId: "add_manufacturer"
      parameters:
      - in: "body"
        name: "manufacturer"
        description: "Manufacturer to add"
        required: true
        schema:
          $ref: "#/definitions/ManufacturerNew"
      responses:
        200:
          description: "Created manufacturer"
          schema:
            $ref: "#/definitions/Manufacturer"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /manufacturer/{manufacturer_id}:
    get:
      description: "Return a manufacturer"
      operationId: "find_manufacturer"
      parameters:
      - name: "manufacturer_id"
        in: "path"
        description: "Manufacturer id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Manufacturer"
          schema:
            $ref: "#/definitions/Manufacturer"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update a manufacturer"
      operationId: "update_manufacturer"
      parameters:
      - name: "manufacturer_id"
        in: "path"
        description: "Manufacturer id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Manufacturer to update"
        required: true
        schema:
          $ref: "#/definitions/ManufacturerNew"
      responses:
        200:
          description: "Updated manufacturer"
          schema:
            $ref: "#/definitions/Manufacturer"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete manufacturer"
      operationId: "delete_manufacturer"
      parameters:
      - name: "manufacturer_id"
        in: "path"
        description: "Manufacturer id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /upload:
    post:
      description: "Upload a file."
      operationId: "add_upload_file"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "upfile"
        in: "formData"
        description: "The file to upload."
        required: false
        type: "file"
      responses:
        200:
          description: "Path of updated file"
          schema:
            $ref: "#/definitions/UploadFile"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /version/synchronize:
    post:
      description: "Get synchronization status of a fileset"
      operationId: "synchronize_versioned_files"
      parameters:
      - in: "body"
        name: "files"
        description: "File list to test synchronization"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/VersionedFile"
      - name: "root_path"
        in: "query"
        description: "Path from which to synchronize"
        required: false
        type: "string"
      - name: "category"
        in: "query"
        description: "Category of files to see"
        required: false
        type: "string"
      responses:
        200:
          description: "Synchronization state"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VersionedFile"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /version/commit:
    post:
      description: "Commit a fileset"
      operationId: "commit_versioned_files"
      parameters:
      - in: "body"
        name: "files"
        description: "File list to commit"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/VersionedFile"
      - name: "force"
        in: "query"
        description: "Force commit"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Commit result"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VersionedFile"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /version/update:
    post:
      description: "Update a fileset"
      operationId: "update_versioned_files"
      parameters:
      - in: "body"
        name: "files"
        description: "File list to update"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/VersionedFile"
      - name: "force"
        in: "query"
        description: "Force update"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Update result"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VersionedFile"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /storages/categories:
    get:
      description: "Return all categories for storages"
      operationId: "find_storages_categories"
      parameters: []
      responses:
        200:
          description: "List of categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StorageCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new storage category"
      operationId: "add_storages_category"
      parameters:
      - in: "body"
        name: "category"
        description: "Category to add"
        required: true
        schema:
          $ref: "#/definitions/StorageCategoryNew"
      responses:
        200:
          description: "Created category"
          schema:
            $ref: "#/definitions/StorageCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /storages/category/{category_id}:
    get:
      description: "Return a storage category"
      operationId: "find_storages_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Categories"
          schema:
            $ref: "#/definitions/StorageCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update storage category"
      operationId: "update_storages_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "category"
        description: "Category to update"
        required: true
        schema:
          $ref: "#/definitions/StorageCategoryNew"
      responses:
        200:
          description: "Updated pärt category"
          schema:
            $ref: "#/definitions/StorageCategory"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete storage category"
      operationId: "delete_storages_category"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Category id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /storages:
    get:
      description: "Return all storages"
      operationId: "find_storages"
      parameters:
      - name: "category"
        in: "query"
        description: "Filter by category"
        required: false
        type: "integer"
        format: "int64"
      - name: "search"
        in: "query"
        description: "Search for storage matching pattern"
        required: false
        type: "string"
      responses:
        200:
          description: "List of storages"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Storage"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Creates a new storage"
      operationId: "add_storage"
      parameters:
      - in: "body"
        name: "storage"
        description: "Storage to add"
        required: true
        schema:
          $ref: "#/definitions/StorageNew"
      responses:
        200:
          description: "Created storage"
          schema:
            $ref: "#/definitions/Storage"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /storage/{storage_id}:
    get:
      description: "Return a storage"
      operationId: "find_storage"
      parameters:
      - name: "storage_id"
        in: "path"
        description: "Storage id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Categories"
          schema:
            $ref: "#/definitions/Storage"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update storage"
      operationId: "update_storage"
      parameters:
      - name: "storage_id"
        in: "path"
        description: "Storage id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "storage"
        description: "Storage to update"
        required: true
        schema:
          $ref: "#/definitions/StorageNew"
      responses:
        200:
          description: "Updated storage"
          schema:
            $ref: "#/definitions/Storage"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Delete storage"
      operationId: "delete_storage"
      parameters:
      - name: "storage_id"
        in: "path"
        description: "Storage id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Deleted ok"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /currencies:
    get:
      description: "Get supported currencies"
      operationId: "find_currencies"
      parameters: []
      responses:
        200:
          description: "Categories"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Currency"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      description: "Update supported currencies"
      operationId: "update_currencies"
      parameters:
      - in: "body"
        name: "currencies"
        description: "Currencies to update"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Currency"
      responses:
        200:
          description: "Updated currencies"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Currency"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /date:
    get:
      description: "Get server current datetime"
      operationId: "get_date"
      parameters: []
      responses:
        200:
          description: "Current datetime"
          schema:
            type: "string"
            format: "date-time"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  PartCategory:
    allOf:
    - $ref: "#/definitions/PartCategoryData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        parent:
          $ref: "#/definitions/PartCategoryRef"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/PartCategory"
        path:
          type: "string"
  Error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  PartCategoryNew:
    allOf:
    - $ref: "#/definitions/PartCategoryData"
    - properties:
        parent:
          $ref: "#/definitions/PartCategoryRef"
  Part:
    allOf:
    - $ref: "#/definitions/PartData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        category:
          $ref: "#/definitions/PartCategory"
        has_childs:
          type: "integer"
          format: "int64"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/Part"
        footprint:
          $ref: "#/definitions/VersionedFile"
        symbol:
          $ref: "#/definitions/VersionedFile"
        parameters:
          type: "array"
          items:
            $ref: "#/definitions/PartParameter"
        distributors:
          type: "array"
          items:
            $ref: "#/definitions/PartDistributor"
        manufacturers:
          type: "array"
          items:
            $ref: "#/definitions/PartManufacturer"
        storages:
          type: "array"
          items:
            $ref: "#/definitions/PartStorage"
        attachements:
          type: "array"
          items:
            $ref: "#/definitions/PartAttachement"
        references:
          type: "array"
          items:
            $ref: "#/definitions/PartReference"
  PartNew:
    allOf:
    - $ref: "#/definitions/PartData"
    - properties:
        category:
          $ref: "#/definitions/PartCategoryRef"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/PartRef"
        footprint:
          $ref: "#/definitions/VersionedFileRef"
        symbol:
          $ref: "#/definitions/VersionedFileRef"
        parameters:
          type: "array"
          items:
            $ref: "#/definitions/PartParameter"
        distributors:
          type: "array"
          items:
            $ref: "#/definitions/PartDistributor"
        manufacturers:
          type: "array"
          items:
            $ref: "#/definitions/PartManufacturer"
        storages:
          type: "array"
          items:
            $ref: "#/definitions/PartStorage"
        attachements:
          type: "array"
          items:
            $ref: "#/definitions/PartAttachement"
        references:
          type: "array"
          items:
            $ref: "#/definitions/PartReference"
  PartParameterDescription:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      unit:
        $ref: "#/definitions/Unit"
      numeric:
        type: "boolean"
  Unit:
    allOf:
    - $ref: "#/definitions/UnitData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
  UnitNew:
    allOf:
    - $ref: "#/definitions/UnitData"
    - {}
  UnitPrefix:
    type: "object"
    required:
    - "id"
    - "name"
    - "power"
    - "symbol"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      symbol:
        type: "string"
      power:
        type: "string"
  Distributor:
    allOf:
    - $ref: "#/definitions/DistributorData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
  DistributorNew:
    allOf:
    - $ref: "#/definitions/DistributorData"
    - {}
  Manufacturer:
    allOf:
    - $ref: "#/definitions/ManufacturerData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
  ManufacturerNew:
    allOf:
    - $ref: "#/definitions/ManufacturerData"
    - {}
  UploadFile:
    allOf:
    - $ref: "#/definitions/UploadFileData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
  VersionedFile:
    allOf:
    - $ref: "#/definitions/VersionedFileData"
    - type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        folder:
          type: "boolean"
  StorageCategory:
    allOf:
    - $ref: "#/definitions/StorageCategoryData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        parent:
          $ref: "#/definitions/StorageCategoryRef"
        childs:
          type: "array"
          items:
            $ref: "#/definitions/StorageCategory"
        path:
          type: "string"
  StorageCategoryNew:
    allOf:
    - $ref: "#/definitions/StorageCategoryData"
    - properties:
        parent:
          $ref: "#/definitions/StorageCategoryRef"
  Storage:
    allOf:
    - $ref: "#/definitions/StorageData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        category:
          $ref: "#/definitions/StorageCategory"
  StorageNew:
    allOf:
    - $ref: "#/definitions/StorageData"
    - properties:
        category:
          $ref: "#/definitions/StorageCategoryRef"
  Currency:
    type: "object"
    required:
    - "base"
    - "name"
    - "ratio"
    - "symbol"
    properties:
      name:
        type: "string"
      symbol:
        type: "string"
      base:
        type: "string"
      ratio:
        type: "number"
        format: "double"
  PartCategoryData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
  PartCategoryRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  PartData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      comment:
        type: "string"
      value_parameter:
        type: "string"
  PartParameter:
    allOf:
    - $ref: "#/definitions/PartParameterData"
    - properties:
        id:
          type: "integer"
          format: "int64"
  PartDistributor:
    allOf:
    - $ref: "#/definitions/DistributorData"
    - properties:
        id:
          type: "integer"
          format: "int64"
        offers:
          type: "array"
          items:
            $ref: "#/definitions/PartOffer"
  PartManufacturer:
    allOf:
    - $ref: "#/definitions/ManufacturerData"
    - properties:
        part_name:
          type: "string"
  PartStorage:
    allOf:
    - $ref: "#/definitions/StorageData"
    - required:
      - "quantity"
      properties:
        quantity:
          type: "integer"
          format: "int64"
  PartAttachement:
    allOf:
    - $ref: "#/definitions/UploadFileData"
    - required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
        description:
          type: "string"
  PartReference:
    allOf:
    - $ref: "#/definitions/PartReferenceData"
    - {}
  PartRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  VersionedFileRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  UnitData:
    type: "object"
    properties:
      name:
        type: "string"
      symbol:
        type: "string"
  DistributorData:
    type: "object"
    properties:
      name:
        type: "string"
      address:
        type: "string"
      website:
        type: "string"
      sku_url:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      comment:
        type: "string"
      allowed:
        type: "boolean"
  ManufacturerData:
    type: "object"
    properties:
      name:
        type: "string"
      address:
        type: "string"
      website:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      comment:
        type: "string"
  UploadFileData:
    type: "object"
    properties:
      source_name:
        type: "string"
      storage_path:
        type: "string"
  VersionedFileData:
    type: "object"
    properties:
      source_path:
        type: "string"
      storage_path:
        type: "string"
      md5:
        type: "string"
      version:
        type: "integer"
        format: "int64"
      state:
        type: "string"
      updated:
        type: "string"
        format: "date-time"
      content:
        type: "string"
      category:
        type: "string"
      metadata:
        type: "string"
  StorageCategoryData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
  StorageCategoryRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
  StorageData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      comment:
        type: "string"
  PartParameterData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      unit:
        $ref: "#/definitions/Unit"
      numeric:
        type: "boolean"
      text_value:
        type: "string"
      min_value:
        type: "number"
        format: "double"
      min_prefix:
        $ref: "#/definitions/UnitPrefix"
      nom_value:
        type: "number"
        format: "double"
      nom_prefix:
        $ref: "#/definitions/UnitPrefix"
      max_value:
        type: "number"
        format: "double"
      max_prefix:
        $ref: "#/definitions/UnitPrefix"
  PartOffer:
    allOf:
    - $ref: "#/definitions/PartOfferData"
    - properties:
        id:
          type: "integer"
          format: "int64"
  PartReferenceData:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      manufacturer:
        type: "string"
      type:
        type: "string"
      uid:
        type: "string"
      updated:
        type: "string"
        format: "date-time"
  PartOfferData:
    type: "object"
    properties:
      packaging_unit:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int64"
      min_order_quantity:
        type: "integer"
        format: "int64"
      unit_price:
        type: "number"
        format: "double"
      available_stock:
        type: "integer"
        format: "int64"
      packaging:
        type: "string"
      currency:
        type: "string"
      sku:
        type: "string"
      updated:
        type: "string"
        format: "dateTime"
